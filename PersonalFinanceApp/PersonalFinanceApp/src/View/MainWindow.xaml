<Window
    x:Class="PersonalFinanceApp.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:custom="clr-namespace:PersonalFinanceApp.ViewModel.Modal"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:PersonalFinanceApp.ViewModel.MainMenu"
    xmlns:views="clr-namespace:PersonalFinanceApp.Src.View"
    x:Name="MainWindows"
    Title="Personal Finance App"
    Width="1152"
    Height="750"
    MinWidth="1152"
    MinHeight="780"
    Background="{DynamicResource MainBackground}"
    Icon="\Resources\img\f7e028af-f53f-47b3-91cc-fd1e3a553db1.ico"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding CloseWindowCommand}"
                                   CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <!--  almost done color  -->
    <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Sans Serif Collection" />
                <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                <Setter Property="FontWeight" Value="Regular" />
            </Style>
            <Style TargetType="RadioButton">
                <Setter Property="Foreground"
                        Value="{DynamicResource CommonText}" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="{DynamicResource onClicked}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="Background" Value="{DynamicResource onHovered}" />
                    </Trigger>
                    <Trigger Property="IsChecked"
                             Value="True">
                        <Setter Property="Background"
                                Value="{DynamicResource onFocused}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="210" />
            <ColumnDefinition Width="433*" />
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0" Background="{DynamicResource DockpanelBackGround}">
            <Border
                Height="60"
                VerticalAlignment="Top"
                DockPanel.Dock="Top">
                <Grid>
                    <Image
                        Width="44"
                        Height="44"
                        Margin="20,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Source="\Resources\img\f7e028af-f53f-47b3-91cc-fd1e3a553db1.ico" />
                    <TextBlock
                        Margin="50,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="40"
                        FontWeight="Bold"
                        Text="PFA" />

                </Grid>
            </Border>
            <!--  Dashboard  -->
            <RadioButton Height="60"
                         VerticalAlignment="Top"
                         Command="{Binding DashBoardNavigateCommand}"
                         DockPanel.Dock="Top"
                         IsHitTestVisible="True"
                         GroupName="Navigation">
                <RadioButton.Template>
                    <ControlTemplate TargetType="RadioButton">
                        <DockPanel Width="210"
                                   Height="60"
                                   Background="{TemplateBinding Background}">
                            <materialDesign:PackIcon Width="30"
                                                     Height="30"
                                                     Margin="10,0,0,0"
                                                     VerticalAlignment="Center"
                                                     DockPanel.Dock="Left"
                                                     Kind="Signal" />
                            <TextBlock Margin="40,0,0,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Left"
                                       FontSize="18"
                                       FontWeight="Normal"
                                       Text="Dashboard" />
                        </DockPanel>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>

            <!-- Expense Book -->
            <RadioButton Height="60"
                         VerticalAlignment="Top"
                         Command="{Binding ExpenseBookNavigateCommand}"
                         DockPanel.Dock="Top"
                         IsHitTestVisible="True"
                         GroupName="Navigation">
                <RadioButton.Template>
                    <ControlTemplate TargetType="RadioButton">
                        <DockPanel Width="210"
                                   Height="60"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Background="{TemplateBinding Background}">
                            <materialDesign:PackIcon Width="30"
                                                     Height="30"
                                                     Margin="10,0,0,0"
                                                     VerticalAlignment="Center"
                                                     DockPanel.Dock="Left"
                                                     Kind="BookOpenPageVariant" />
                            <TextBlock Margin="40,0,0,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Left"
                                       FontSize="18"
                                       FontWeight="Normal"
                                       Text="Expense book" />
                        </DockPanel>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>

            <!-- Goal Plan -->
            <RadioButton Height="60"
                         VerticalAlignment="Top"
                         Command="{Binding GoalplanNavigateCommand}"
                         DockPanel.Dock="Top"
                         IsHitTestVisible="True"
                         GroupName="Navigation">
                <RadioButton.Template>
                    <ControlTemplate TargetType="RadioButton">
                        <DockPanel Width="210"
                                   Height="60"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Background="{TemplateBinding Background}">
                            <materialDesign:PackIcon Width="30"
                                                     Height="30"
                                                     Margin="10,0,0,0"
                                                     VerticalAlignment="Center"
                                                     DockPanel.Dock="Left"
                                                     Kind="FlagCheckered" />
                            <TextBlock Margin="40,0,0,0"
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Left"
                                       FontSize="18"
                                       FontWeight="Normal"
                                       Text="Goal plan" />
                        </DockPanel>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>

            <!-- Recurring -->
            <RadioButton Height="60"
                         VerticalAlignment="Top"
                         Command="{Binding RecurringNavigateCommand}"
                         DockPanel.Dock="Top"
                         IsHitTestVisible="True"
                         GroupName="Navigation">
                <RadioButton.Template>
                    <ControlTemplate TargetType="RadioButton">
                        <DockPanel Width="210"
                                   Height="60"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Background="{TemplateBinding Background}">
                            <materialDesign:PackIcon Width="30"
                                                     Height="30"
                                                     Margin="10,0,0,0"
                                                     VerticalAlignment="Center"
                                                     DockPanel.Dock="Left"
                                                     Kind="CalendarClockOutline" />
                            <TextBlock Margin="40,0,0,0"
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Left"
                                       FontSize="18"
                                       FontWeight="Normal"
                                       Text="Recurring" />
                        </DockPanel>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>

            <!-- Setting -->
            <RadioButton Height="60"
                         VerticalAlignment="Bottom"
                         Command="{Binding SettingNavigateCommand}"
                         DockPanel.Dock="Bottom"
                         IsHitTestVisible="True"
                         GroupName="Navigation">
                <RadioButton.Template>
                    <ControlTemplate TargetType="RadioButton">
                        <DockPanel Width="210"
                                   Height="60"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Background="{TemplateBinding Background}">
                            <materialDesign:PackIcon Width="30"
                                                     Height="30"
                                                     Margin="10,0,0,0"
                                                     VerticalAlignment="Center"
                                                     DockPanel.Dock="Left"
                                                     Kind="CogBox" />
                            <TextBlock Margin="40,0,0,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Left"
                                       FontSize="18"
                                       FontWeight="Normal"
                                       Text="Setting" />
                        </DockPanel>
                    </ControlTemplate>
                </RadioButton.Template>
            </RadioButton>

        </DockPanel>

        <Grid Grid.Column="1" Grid.ColumnSpan="2">
            <Grid Grid.Row="1">
                <DockPanel Panel.ZIndex="100">
                    <TextBlock ></TextBlock>
                    <!--  USER  -->
                    <materialDesign:PopupBox
                        Margin="0,10,20,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="{DynamicResource CommonGridBackground}"
                        DockPanel.Dock="Right"
                        Foreground="{DynamicResource CommonText}"
                        PlacementMode="BottomAndAlignRightEdges"
                        PopupMode="Click"
                        PopupUniformCornerRadius="30"
                        StaysOpen="True"
                        Style="{StaticResource MaterialDesignPopupBox}">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon
                                Width="30"
                                Height="30"
                                Foreground="{DynamicResource SuperText}"
                                Kind="AccountBadge" />

                        </materialDesign:PopupBox.ToggleContent>
                        <Grid Width="300">
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontFamily" Value="Sans Serif Collection" />
                                    <Setter Property="Foreground" Value="{DynamicResource Notifcation_PopupBox}" />
                                    <Setter Property="FontWeight" Value="Regular" />
                                    <Setter Property="FontSize" Value="16" />
                                </Style>
                                <Style TargetType="materialDesign:PackIcon">
                                    <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Stretch"
                                                                      VerticalAlignment="Stretch" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand" />
                                            <Setter Property="Background" Value="{DynamicResource User_onHovered}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="4*" />
                                    <RowDefinition Height="5*" />
                                    <RowDefinition Height="5*" />
                                </Grid.RowDefinitions>

                                <!--  user name  -->
                                <TextBlock
                                    Grid.Row="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    FontSize="16"
                                    FontWeight="Bold"
                                    Text="{Binding UserNameAdmin}" />

                                <!--  sign out  -->
                                <Border Grid.Row="1">
                                    <Button Command="{Binding ExitAccountCommand}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="7*" />
                                                <ColumnDefinition Width="23*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                Grid.Column="1"
                                                Margin="15,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="Sign out" />
                                            <materialDesign:PackIcon
                                                Width="30"
                                                Height="30"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource Notifcation_PopupBox}"
                                                Kind="AccountLockOpen" />
                                        </Grid>
                                    </Button>
                                </Border>

                                <!--  exit program  -->
                                <Border Grid.Row="2">
                                    <Button Command="{Binding CloseWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="7*" />
                                                <ColumnDefinition Width="23*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                Grid.Column="1"
                                                Margin="15,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="Exit" />
                                            <materialDesign:PackIcon
                                                Width="30"
                                                Height="30"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource Notifcation_PopupBox}"
                                                Kind="LogoutVariant" />
                                        </Grid>
                                    </Button>
                                </Border>

                            </Grid>
                        </Grid>
                    </materialDesign:PopupBox>
                    <!--  NOTIFY  -->
                    <materialDesign:PopupBox
                        Margin="0,12,5,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        PlacementMode="BottomAndAlignRightEdges"
                        StaysOpen="True">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon
                                Width="28"
                                Height="28"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource SuperText}"
                                Kind="Bell" />
                        </materialDesign:PopupBox.ToggleContent>

                        <views:Notification_mainView></views:Notification_mainView>
                    </materialDesign:PopupBox>

                </DockPanel>
                <ContentControl Grid.Column="1" Content="{Binding CurrentViewModel}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type viewModels:ExpenseViewModel}">
                            <views:Main_expense_mainView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:DashboardViewModel}">
                            <views:UC_Dashboard />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:GoalplanViewModel}">
                            <views:UC_Goalplan />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:SettingViewModel}">
                            <views:Main_Setting />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:RecurringViewModel}">
                            <views:Recurring_MainView />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>


                <!--notification <3-->
                <Ellipse Width="10"
                         Height="10"
                         Fill="red"
                         Stroke="Transparent"
                         VerticalAlignment="Top"
                         HorizontalAlignment="Right"
                         Margin="0 12 55 0"
                         Visibility="{Binding}"></Ellipse> 
            </Grid>
        </Grid>
        <custom:Modal
            Grid.RowSpan="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Panel.ZIndex="100"
            Content="{Binding CurrentModalViewModel}"
            IsOpen="{Binding IsModalOpen}">

            <ContentControl.Resources>
                <!--  expense  -->

                <!--  add new  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseAddNewViewModel}">
                    <views:Main_Expense_AddNew />
                </DataTemplate>
                <!--  new expense book  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseNewExBViewModel}">
                    <views:UC_Main_ExpenseBook_AddNew />
                </DataTemplate>
                <!--  new category  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseNewCategoryViewModel}">
                    <views:Main_Expense_AddCategory />
                </DataTemplate>
                <!--  edit  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseEditViewModel}">
                    <views:Main_Expense_Edit />
                </DataTemplate>
                <!--  delete  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseDeleteViewModel}">
                    <views:Main_Expense_DeleteConfirm />
                </DataTemplate>
                <!--  recover  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseRecoverViewModel}">
                    <views:Main_Expense_RecoverConfirm />
                </DataTemplate>
                <!--  remove  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseRemoveViewModel}">
                    <views:Main_Expense_RemoveConfirm />
                </DataTemplate>
                <!--  remove  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseRecycleViewModel}">
                    <views:Main_Expense_Recycle />
                </DataTemplate>
                <!--  remove  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseEditBudgetViewModel}">
                    <views:Main_Expense_Budget />
                </DataTemplate>
                <!--expensebook detail-->
                <DataTemplate DataType="{x:Type viewModels:ExpenseBookDetailViewModel}">
                    <views:Main_Expense_ExpenseBookDetail />
                </DataTemplate>
                <!--category detail-->
                <DataTemplate DataType="{x:Type viewModels:CategoryDetailViewModel}">
                    <views:Main_Expense_CategoryDetails />
                </DataTemplate>

                <!--  Goal  -->
                <DataTemplate DataType="{x:Type viewModels:GoalplanAddNewViewModel}">
                    <views:UC_Main_Goalplan_Adding />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalEditViewModel}">
                    <views:UC_Main_Goalplan_Adjust />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalAddSavedAmountViewModel}">
                    <views:Main_Goalplan_plusMinus />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalHistoryViewModel}">
                    <views:Main_Goalplan_History />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalDeleteViewModel}">
                    <views:Main_Goalplan_deleteConfirm />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalAddNewCategoryViewModel}">
                    <views:NewCategory />
                </DataTemplate>
                
                <!--  recurring  -->
                <DataTemplate DataType="{x:Type viewModels:RecurringAddnew}">
                    <views:Recurring_Expense_Addnew />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:RecurringAddExpenseViewModel}">
                    <views:Main_Recurring_AddExpense />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:RecurringEditViewModel}">
                    <views:Recurring_Expense_Edit />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:RecurringDetailViewModel}">
                    <views:Main_Recurring_Detail />
                </DataTemplate>
                <!--  Setting  -->
                <DataTemplate DataType="{x:Type viewModels:SettingChangedEmailViewModel}">
                    <views:Main_Setting_ChangeEmail />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingChangedPasswordViewModel}">
                    <views:Main_setting_ChangePassword />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingExportToExcelViewModel}">
                    <views:Main_Setting_ExportToExcel />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingDeleteAccountViewModel}">
                    <views:Setting_Warning />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingLogoutViewModel}">
                    <views:Setting_Logout_Warning />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingBudgetDefaultViewModel}">
                    <views:Setting_ChangedDefaultBudgetView />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingPhoneNumberViewModel}">
                    <views:Main_Setting_ChangePhoneNumber />
                </DataTemplate>
            </ContentControl.Resources>
        </custom:Modal>
    </Grid>
</Window>