<Window x:Class="PersonalFinanceApp.View.MainWindow"

        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        
        xmlns:viewModels="clr-namespace:PersonalFinanceApp.ViewModel.MainMenu"
        xmlns:views="clr-namespace:PersonalFinanceApp.Src.View"
        
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:custom="clr-namespace:PersonalFinanceApp.ViewModel.Modal"
        Background="#0D2129"
        ResizeMode="CanResizeWithGrip"
        MinHeight="720" MinWidth="1152 "
        Height="720" Width="1152"
        WindowStartupLocation="CenterScreen" 
        x:Name="MainWindows"
        WindowStyle="None">

    <!--almost done color-->
    <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Sans Serif Collection" />
                <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                <Setter Property="FontWeight" Value="Regular" />
            </Style>
            <Style TargetType="materialDesign:PackIcon">
                <Setter Property="Foreground" Value="{DynamicResource CommonText}"></Setter>
            </Style>
            <Style TargetType="Button">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Setter Property="Foreground" Value="{DynamicResource CommonText}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"></ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="{DynamicResource onClicked}" ></Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Cursor" Value="Hand"></Setter>
                        <Setter Property="Background" Value="{DynamicResource onHovered}" ></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="210"></ColumnDefinition>
            <ColumnDefinition Width="139*"></ColumnDefinition>
            <ColumnDefinition Width="18*"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Column="0" Background="{DynamicResource DockpanelBackGround}">
            <Border Height="60" VerticalAlignment="Top"
                    DockPanel.Dock="Top">
                <Grid>
                    <Image Height="44" Width="44"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left"
                           Margin="20,0,0,0"
                           Source="/Resources/img/Logo_UIT_updated.svg.png" />
                    <TextBlock Text="PFA" FontSize="40"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Center"
                               Margin="50,0,0,0"
                               FontWeight="Bold">
                    </TextBlock>
                    <TextBlock></TextBlock>

                </Grid>
            </Border>
            <!--Dashboard-->
            <Button Height="60" VerticalAlignment="top"
                    DockPanel.Dock="Top"
                    IsHitTestVisible="True"
                    Command="{Binding DashBoardNavigateCommand}">
                <Grid VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="60" Width="210"
                        Background="Transparent">
                    <TextBlock ></TextBlock>

                    <materialDesign:PackIcon 
                                                Kind="Signal"
                                                Width="30"
                                                Height="30"
                                                VerticalAlignment="Center" 
                        Margin="12,0,0,0" />
                    <TextBlock Text="Dashboard" FontSize="18"
                                  HorizontalAlignment="Right"
                                  VerticalAlignment="Center"
                                  Margin="0,0,41,0" FontWeight="Normal"/>

                </Grid>
            </Button>
            <!--Expense book-->
            <Button Command="{Binding ExpenseBookNavigateCommand}"
                Height="60" VerticalAlignment="top"
                    DockPanel.Dock="Top"
                    IsHitTestVisible="True">
                <Grid VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="60" Width="210"
                        Background="Transparent">
                    <TextBlock ></TextBlock>

                    <TextBlock Text="Expense book"
                                       FontSize="18"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Margin="0,0,20,0" FontWeight="Normal"/>

                    <materialDesign:PackIcon Kind="BookOpenPageVariant"
                                                 Width="30"
                                                 Height="30"
                                                 VerticalAlignment="Center"
                                                 Margin="13,0,0,0" />
                </Grid>
            </Button>
            <!--Goal plan-->
            <Button Height="60" VerticalAlignment="top"
                    DockPanel.Dock="Top"
                    IsHitTestVisible="True"
                    Command="{Binding GoalplanNavigateCommand}">
                <Grid VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="60" Width="210"
                        Background="Transparent">
                    <TextBlock ></TextBlock>

                    <materialDesign:PackIcon Kind="FlagCheckered"

                     Width="30"
                     Height="30"
                     VerticalAlignment="Center"
                     Margin="10,0,0,0" />
                    <TextBlock Text="Goal plan" 
                                FontSize="18"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Margin="15,0,0,0" FontWeight="Normal"></TextBlock>

                </Grid>
            </Button>
            <!--Summary-->
            <Button Height="60" VerticalAlignment="top"
                    DockPanel.Dock="Top"
                    IsHitTestVisible="True"
                    Command="{Binding SummaryNavigateCommand}">
                <Grid VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="60" Width="210"
                        Background="Transparent">
                    <TextBlock ></TextBlock>
                    <materialDesign:PackIcon Kind="DatabaseEye"
                     Width="30"
                     Height="30"
                     VerticalAlignment="Center"
                     Margin="11,0,0,0" />

                    <TextBlock Text="Summary" FontSize="18"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                    FontWeight="Normal"
                                Margin="18,0,0,0"/>

                </Grid>
            </Button>


            <Grid Height="60" DockPanel.Dock="Bottom"
                  VerticalAlignment="Bottom"
                  >

                <!-- color here -->
                <Border CornerRadius="20,0,0,20" Width="40" 
                        Height="40"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Margin="0,0,40,0"
                        Background="Black">
                    <Button>
                        <materialDesign:PackIcon Kind="WhiteBalanceSunny" 
                                                 Width="35"
                                                 Height="35"
                                                 />
                    </Button>
                </Border>

                <!-- color here -->
                <Border CornerRadius="0,20,20,0" Width="40" 
                        Height="40"
                        VerticalAlignment="Center" HorizontalAlignment="Center"
                        Margin="40,0,0,0"
                        Background="Black">
                    <Button>
                        <materialDesign:PackIcon Kind="MoonWaningCrescent" 
                                                 Width="35"
                                                 Height="35" RenderTransformOrigin="0.5,0.5"
                                                 >
                            <materialDesign:PackIcon.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="-46.975"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </materialDesign:PackIcon.RenderTransform>
                        </materialDesign:PackIcon>
                    </Button>
                </Border>
            </Grid>

            <!--Option-->
            <Button Command="{Binding SettingNavigateCommand}"
                    Height="60" VerticalAlignment="Bottom"
                    DockPanel.Dock="Bottom">
                <Grid VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Height="60" Width="210"
                        Background="Transparent">
                    <TextBlock ></TextBlock>

                    <materialDesign:PackIcon Kind="CogBox"
                     Width="34"
                     Height="34"
                     VerticalAlignment="Center"
                     Margin="12,0,0,0" />

                    <TextBlock Text="Setting" FontSize="18"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                                   FontWeight="Normal"
                               Margin="0,0,73,0"/>

                </Grid>
            </Button>
        </DockPanel>

        <Grid Grid.Column="1" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <DockPanel Grid.Row="0">
                <Button Width="40" Height="30"
                        VerticalAlignment="Bottom"
                            DockPanel.Dock="Right"
                        HorizontalAlignment="Right"
                    Command="{Binding CloseCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                            >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource CommonText}"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Width="40" Height="30" Background="{TemplateBinding Background}">
                                            <materialDesign:PackIcon Kind="WindowClose" 
                                        Foreground="{TemplateBinding Foreground}"
                                                    Width="20" Height="20"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                                 Margin="0 0 0 0"
                                         />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand"></Setter>
                                    <Setter Property="Background" Value="Red"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="40" Height="30"
                        VerticalAlignment="Bottom"
                            DockPanel.Dock="Right"
                        HorizontalAlignment="Right"
                    Margin="0 0 5 0"
                    Command="{Binding WindowMaximum}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                        
                            >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource CommonText}"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Width="40" Height="30" Background="{TemplateBinding Background}">
                                            <materialDesign:PackIcon Kind="WindowRestore"
                                        Foreground="{TemplateBinding Foreground}"
                                                    Width="20" Height="20"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                                 Margin="0 0 0 0"
                                         />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand"></Setter>
                                    <Setter Property="Background"  Value="#FF2B9D88" ></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Width="40" Height="30"
                        VerticalAlignment="Bottom"
                            DockPanel.Dock="Right"
                        HorizontalAlignment="Right"
                    Margin="0 0 5 0"
                    Command="{Binding WindowMinimum}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"

                            >
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="Transparent"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource CommonText}"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Width="40" Height="30" Background="{TemplateBinding Background}">
                                            <materialDesign:PackIcon Kind="Minus"  
                                        Foreground="{TemplateBinding Foreground}"
                                                    Width="25" Height="25"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                                 Margin="0 0 0 0"
                                         />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand"></Setter>
                                    <Setter Property="Background"  Value="#FF2B9D88" ></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DockPanel>
            <Grid Grid.Row="1">
                <ContentControl Grid.Column="1" Content="{Binding CurrentViewModel}">
                    <ContentControl.Resources>

                        <DataTemplate DataType="{x:Type viewModels:ExpenseViewModel}">
                            <views:Main_expense_mainView/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModels:DashboardViewModel}">
                            <views:UC_Dashboard/>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModels:GoalplanViewModel}">
                            <views:UC_Goalplan />
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModels:SummaryViewModel}">
                            <views:UC_Summary />
                        </DataTemplate>

                    </ContentControl.Resources>
                </ContentControl>

                <custom:Modal Grid.Column="0" Grid.RowSpan="1" Grid.ColumnSpan="2" 
                      Panel.ZIndex="100"
                      IsOpen="{Binding IsModalOpen}"
                      Content="{Binding CurrentModalViewModel}">

                    <ContentControl.Resources>
                        <!--expense-->

                        <!--add new-->
                        <DataTemplate DataType="{x:Type viewModels:ExpenseAddNewViewModel}">
                            <views:Main_Expense_AddNew/>
                        </DataTemplate>
                        <!--filter-->
                        <DataTemplate DataType="{x:Type viewModels:ExpenseFilterViewModel}">
                            <views:Main_Expense_Filter/>
                        </DataTemplate>
                        <!--new expense book-->
                        <DataTemplate DataType="{x:Type viewModels:ExpenseNewExBViewModel}">
                            <views:UC_Main_ExpenseBook_AddNew/>
                        </DataTemplate>
                        <!--new category-->
                        <DataTemplate DataType="{x:Type viewModels:ExpenseNewCategoryViewModel}">
                            <views:Main_Expense_AddCategory/>
                        </DataTemplate>
                        <!--edit-->
                        <DataTemplate DataType="{x:Type viewModels:ExpenseEditViewModel}">
                            <views:Main_Expense_Edit/>
                        </DataTemplate>
                        <!--delete-->
                        <DataTemplate DataType="{x:Type viewModels:ExpenseDeleteViewModel}">
                            <views:Main_Expense_DeleteConfirm/>
                        </DataTemplate>
                        <!--recover-->
                        <DataTemplate DataType="{x:Type viewModels:ExpenseRecoverViewModel}">
                            <views:Main_Expense_RecoverConfirm/>
                        </DataTemplate>
                        <!--remove-->
                        <DataTemplate DataType="{x:Type viewModels:ExpenseRemoveViewModel}">
                            <views:Main_Expense_RemoveConfirm/>
                        </DataTemplate>

                        <!--Goal-->
                        <DataTemplate DataType="{x:Type viewModels:GoalplanAddNewViewModel}">
                            <views:UC_Main_Goalplan_Adding />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:GoalEditViewModel}">
                            <views:UC_Main_Goalplan_Adjust/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:GoalAddSavedAmountViewModel}">
                            <views:Main_Goalplan_plusMinus/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:GoalHistoryViewModel}">
                            <views:Main_Goalplan_History/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:GoalDeleteViewModel}">
                            <views:Main_Goalplan_deleteConfirm/>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:GoalAddNewCategoryViewModel}">
                            <views:NewCategory/>
                        </DataTemplate>
                    </ContentControl.Resources>
                </custom:Modal>
            </Grid>
        </Grid>
    </Grid>
</Window>