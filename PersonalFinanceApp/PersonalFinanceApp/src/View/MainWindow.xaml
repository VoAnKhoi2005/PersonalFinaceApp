<Window
    x:Class="PersonalFinanceApp.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:custom="clr-namespace:PersonalFinanceApp.ViewModel.Modal"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:notify="clr-namespace:PersonalFinanceApp.Src.View.MainMenu.Notification"
    xmlns:viewModels="clr-namespace:PersonalFinanceApp.ViewModel.MainMenu"
    xmlns:views="clr-namespace:PersonalFinanceApp.Src.View"
    x:Name="MainWindows"
    Width="1152"
    Height="750"
    MinWidth="1152"
    MinHeight="780"
    Background="{DynamicResource MainBackground}"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding CloseWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>
    <!--  almost done color  -->
    <Grid>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Sans Serif Collection" />
                <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                <Setter Property="FontWeight" Value="Regular" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="Background" Value="{DynamicResource onClicked}" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="Background" Value="{DynamicResource onHovered}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="210" />
            <ColumnDefinition Width="433*" />
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0" Background="{DynamicResource DockpanelBackGround}">
            <Border
                Height="60"
                VerticalAlignment="Top"
                DockPanel.Dock="Top">
                <Grid>
                    <Image
                        Width="44"
                        Height="44"
                        Margin="20,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Source="/Resources/img/Logo_UIT_updated.svg.png" />
                    <TextBlock
                        Margin="50,0,0,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="40"
                        FontWeight="Bold"
                        Text="PFA" />

                </Grid>
            </Border>
            <!--  Dashboard  -->
            <Button
                Height="60"
                VerticalAlignment="top"
                Command="{Binding DashBoardNavigateCommand}"
                DockPanel.Dock="Top"
                IsHitTestVisible="True">
                <DockPanel
                    Width="210"
                    Height="60"
                    Background="Transparent">

                    <materialDesign:PackIcon
                        Width="30"
                        Height="30"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        Kind="Signal" />
                    <TextBlock
                        Margin="40,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        FontSize="18"
                        FontWeight="Normal"
                        Text="Dashboard" />

                </DockPanel>
            </Button>
            <!--  Expense book  -->
            <Button
                Height="60"
                VerticalAlignment="top"
                Command="{Binding ExpenseBookNavigateCommand}"
                DockPanel.Dock="Top"
                IsHitTestVisible="True">
                <DockPanel
                    Width="210"
                    Height="60"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent">

                    <materialDesign:PackIcon
                        Width="30"
                        Height="30"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        Kind="BookOpenPageVariant" />
                    <TextBlock
                        Margin="40,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        FontSize="18"
                        FontWeight="Normal"
                        Text="Expense book" />


                </DockPanel>
            </Button>
            <!--  Goal plan  -->
            <Button
                Height="60"
                VerticalAlignment="top"
                Command="{Binding GoalplanNavigateCommand}"
                DockPanel.Dock="Top"
                IsHitTestVisible="True">
                <DockPanel
                    Width="210"
                    Height="60"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent">
                    <materialDesign:PackIcon
                        Width="30"
                        Height="30"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        Kind="FlagCheckered" />
                    <TextBlock
                        Margin="40,0,0,0"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        FontSize="18"
                        FontWeight="Normal"
                        Text="Goal plan" />

                </DockPanel>
            </Button>
            <!--  Recurring  -->
            <!--  Binding here  -->
            <Button
                Height="60"
                VerticalAlignment="top"
                Command="{Binding RecurringNavigateCommand}"
                DockPanel.Dock="Top"
                IsHitTestVisible="True">
                <DockPanel
                    Width="210"
                    Height="60"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent">
                    <materialDesign:PackIcon
                        Width="30"
                        Height="30"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        Kind="CalendarClockOutline" />

                    <TextBlock
                        Margin="40,0,0,0"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        FontSize="18"
                        FontWeight="Normal"
                        Text="Recurring" />
                </DockPanel>
            </Button>
            <!--  Option  -->
            <Button
                Height="60"
                VerticalAlignment="Bottom"
                Command="{Binding SettingNavigateCommand}"
                DockPanel.Dock="Bottom">
                <DockPanel
                    Width="210"
                    Height="60"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="Transparent">


                    <materialDesign:PackIcon
                        Width="30"
                        Height="30"
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        Kind="CogBox" />

                    <TextBlock
                        Margin="40,0,0,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        DockPanel.Dock="Left"
                        FontSize="18"
                        FontWeight="Normal"
                        Text="Setting" />
                </DockPanel>
            </Button>
        </DockPanel>

        <Grid Grid.Column="1" Grid.ColumnSpan="2">
            <Grid Grid.Row="1">
                <DockPanel Panel.ZIndex="100">
                    <materialDesign:PopupBox
                        Margin="0,10,20,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        Background="{DynamicResource CommonGridBackground}"
                        DockPanel.Dock="Right"
                        Foreground="{DynamicResource CommonText}"
                        PlacementMode="BottomAndAlignRightEdges"
                        PopupMode="Click"
                        PopupUniformCornerRadius="30"
                        Style="{StaticResource MaterialDesignPopupBox}">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon
                                Width="30"
                                Height="30"
                                Foreground="{DynamicResource SuperText}"
                                Kind="AccountBadge" />

                        </materialDesign:PopupBox.ToggleContent>
                        <Grid Width="300">
                            <Grid.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontFamily" Value="Sans Serif Collection" />
                                    <Setter Property="Foreground" Value="{DynamicResource Notifcation_PopupBox}" />
                                    <Setter Property="FontWeight" Value="Regular" />
                                    <Setter Property="FontSize" Value="16" />
                                </Style>
                                <Style TargetType="materialDesign:PackIcon">
                                    <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Cursor" Value="Hand" />
                                            <Setter Property="Background" Value="{DynamicResource User_onHovered}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="16*" />
                                <RowDefinition Height="19*" />
                            </Grid.RowDefinitions>
                            <!--  avatar  -->
                            <Border
                                Width="150"
                                Height="150"
                                Margin="0,10,0,0"
                                CornerRadius="90" />
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Text="User avatar here" />
                            <Grid Grid.Row="1">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="4*" />
                                    <RowDefinition Height="5*" />
                                    <RowDefinition Height="5*" />
                                </Grid.RowDefinitions>

                                <!--  user name  -->
                                <TextBlock
                                    Grid.Row="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom"
                                    FontSize="16"
                                    FontWeight="Bold"
                                    Text="@username" />

                                <!--  sign out  -->
                                <Border Grid.Row="1">
                                    <Button Command="{Binding ExitAccountCommand}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="7*" />
                                                <ColumnDefinition Width="23*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                Grid.Column="1"
                                                Margin="15,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="Sign out" />
                                            <materialDesign:PackIcon
                                                Width="30"
                                                Height="30"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource Notifcation_PopupBox}"
                                                Kind="AccountLockOpen" />
                                        </Grid>
                                    </Button>
                                </Border>

                                <!--  exit program  -->
                                <Border Grid.Row="2">
                                    <Button Command="{Binding CloseWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="7*" />
                                                <ColumnDefinition Width="23*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock
                                                Grid.Column="1"
                                                Margin="15,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="Exit" />
                                            <materialDesign:PackIcon
                                                Width="30"
                                                Height="30"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource Notifcation_PopupBox}"
                                                Kind="LogoutVariant" />
                                        </Grid>
                                    </Button>
                                </Border>

                            </Grid>
                        </Grid>
                    </materialDesign:PopupBox>

                    <materialDesign:PopupBox
                        Margin="0,12,5,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        PlacementMode="BottomAndAlignRightEdges">
                        <materialDesign:PopupBox.ToggleContent>
                            <materialDesign:PackIcon
                                Width="28"
                                Height="28"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{DynamicResource SuperText}"
                                Kind="Bell" />
                        </materialDesign:PopupBox.ToggleContent>
                        <Border Width="650" Height="650">
                            <Grid>
                                <Grid.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontFamily" Value="Sans Serif Collection" />
                                        <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                                        <Setter Property="FontWeight" Value="Regular" />
                                    </Style>
                                </Grid.Resources>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <!--  header  -->
                                <DockPanel Grid.Row="0">
                                    <Button
                                        Width="40"
                                        Height="30"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"
                                        DockPanel.Dock="Left">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Foreground" Value="{DynamicResource Notifcation_PopupBox}" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border
                                                                Width="40"
                                                                Height="30"
                                                                Background="{TemplateBinding Background}">
                                                                <materialDesign:PackIcon
                                                                    Width="20"
                                                                    Height="20"
                                                                    Margin="0,0,0,0"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Kind="ArrowLeft" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="Cursor" Value="Hand" />
                                                        <Setter Property="Background" Value="{DynamicResource Notification_onHovered}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button
                                        Width="40"
                                        Height="30"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"
                                        DockPanel.Dock="Right">
                                        <Button.Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Background" Value="Transparent" />
                                                <Setter Property="Foreground" Value="{DynamicResource Notifcation_PopupBox}" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border
                                                                Width="40"
                                                                Height="30"
                                                                Background="{TemplateBinding Background}">
                                                                <materialDesign:PackIcon
                                                                    Width="20"
                                                                    Height="20"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Kind="BellCog" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="Cursor" Value="Hand" />
                                                        <Setter Property="Background" Value="{DynamicResource Notification_onHovered}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <TextBlock
                                        Margin="10,0,0,0"
                                        VerticalAlignment="Center"
                                        DockPanel.Dock="Left"
                                        FontSize="16"
                                        FontWeight="SemiBold"
                                        Foreground="{DynamicResource Notifcation_PopupBox}"
                                        Text="Notification" />
                                </DockPanel>
                                <Border Grid.Row="1">
                                    <Grid>
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="30"
                                            Opacity="0.5"
                                            Text="No goal found!"
                                            TextAlignment="Center"
                                            Visibility="{Binding HasNoGoal, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                        <ScrollViewer
                                            Margin="0,0,0,5"
                                            Padding="5"
                                            VerticalScrollBarVisibility="Auto">
                                            <ItemsControl ItemsSource="{Binding NotifyCardViewModels}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <notify:Notifcation_Goal Margin="5" />
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Top"
                                                            IsItemsHost="True"
                                                            ItemHeight="auto"
                                                            ItemWidth="800" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </materialDesign:PopupBox>

                </DockPanel>
                <ContentControl Grid.Column="1" Content="{Binding CurrentViewModel}">
                    <ContentControl.Resources>

                        <DataTemplate DataType="{x:Type viewModels:ExpenseViewModel}">
                            <views:Main_expense_mainView />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:DashboardViewModel}">
                            <views:UC_Dashboard />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:GoalplanViewModel}">
                            <views:UC_Goalplan />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:SettingViewModel}">
                            <views:Main_Setting />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:RecurringViewModel}">
                            <views:Recurring_MainView />
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>
            </Grid>
        </Grid>
        <custom:Modal
            Grid.RowSpan="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Panel.ZIndex="100"
            Content="{Binding CurrentModalViewModel}"
            IsOpen="{Binding IsModalOpen}">

            <ContentControl.Resources>
                <!--  expense  -->

                <!--  add new  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseAddNewViewModel}">
                    <views:Main_Expense_AddNew />
                </DataTemplate>
                <!--  new expense book  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseNewExBViewModel}">
                    <views:UC_Main_ExpenseBook_AddNew />
                </DataTemplate>
                <!--  new category  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseNewCategoryViewModel}">
                    <views:Main_Expense_AddCategory />
                </DataTemplate>
                <!--  edit  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseEditViewModel}">
                    <views:Main_Expense_Edit />
                </DataTemplate>
                <!--  delete  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseDeleteViewModel}">
                    <views:Main_Expense_DeleteConfirm />
                </DataTemplate>
                <!--  recover  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseRecoverViewModel}">
                    <views:Main_Expense_RecoverConfirm />
                </DataTemplate>
                <!--  remove  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseRemoveViewModel}">
                    <views:Main_Expense_RemoveConfirm />
                </DataTemplate>
                <!--  remove  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseRecycleViewModel}">
                    <views:Main_Expense_Recycle />
                </DataTemplate>
                <!--  remove  -->
                <DataTemplate DataType="{x:Type viewModels:ExpenseEditBudgetViewModel}">
                    <views:Main_Expense_Budget />
                </DataTemplate>

                <!--  Goal  -->
                <DataTemplate DataType="{x:Type viewModels:GoalplanAddNewViewModel}">
                    <views:UC_Main_Goalplan_Adding />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalEditViewModel}">
                    <views:UC_Main_Goalplan_Adjust />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalAddSavedAmountViewModel}">
                    <views:Main_Goalplan_plusMinus />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalHistoryViewModel}">
                    <views:Main_Goalplan_History />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalDeleteViewModel}">
                    <views:Main_Goalplan_deleteConfirm />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:GoalAddNewCategoryViewModel}">
                    <views:NewCategory />
                </DataTemplate>
                <!--  recurring  -->
                <DataTemplate DataType="{x:Type viewModels:RecurringAddnew}">
                    <views:Recurring_Expense_Addnew />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:RecurringAddExpenseViewModel}">
                    <views:Main_Recurring_AddExpense />
                </DataTemplate>
                <!--  Setting  -->
                <DataTemplate DataType="{x:Type viewModels:SettingChangedEmailViewModel}">
                    <views:Main_Setting_ChangeEmail />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingChangedPasswordViewModel}">
                    <views:Main_setting_ChangePassword />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingExportToExcelViewModel}">
                    <views:Main_Setting_ExportToExcel />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingDeleteAccountViewModel}">
                    <views:Setting_Warning />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingLogoutViewModel}">
                    <views:Setting_Logout_Warning />
                </DataTemplate>
                <DataTemplate DataType="{x:Type viewModels:SettingBudgetDefaultViewModel}">
                    <views:Setting_ChangedDefaultBudgetView />
                </DataTemplate>
            </ContentControl.Resources>
        </custom:Modal>
    </Grid>
</Window>