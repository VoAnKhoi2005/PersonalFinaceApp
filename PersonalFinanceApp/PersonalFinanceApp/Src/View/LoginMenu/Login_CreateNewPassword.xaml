<UserControl
    x:Class="PersonalFinanceApp.Src.View.UC_Login_CreateNewPasswordView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:PersonalFinanceApp.Src.View"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    <Grid>
        <materialDesign:Card
            x:Name="ResetNewPasswordCard"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UniformCornerRadius="40">
            <Grid Background="{DynamicResource CommonGridBackground}">
                <Grid.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="{DynamicResource Login_button}" />
                        <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <Setter Property="Background" Value="{DynamicResource onHovered}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <Grid
                    Width="560"
                    Height="400"
                    Background="{DynamicResource CommonGridBackground}">
                    <Label
                        Margin="0,20,0,314"
                        HorizontalAlignment="Center"
                        VerticalContentAlignment="Top"
                        Content="Reset password"
                        FontFamily="Sans Serif Collection"
                        FontSize="30" />
                    <Label
                        Margin="26,121,440,209"
                        Content="New &#xD;&#xA;password"
                        FontSize="16"
                        Foreground="{DynamicResource CommonText}" />
                    <Border
                        Width="400"
                        Height="40"
                        Margin="124,124,36,236"
                        Background="{DynamicResource Login_border}"
                        CornerRadius="15">
                        <TextBox
                            x:Name="PasswordNew"
                            Width="380"
                            Height="40"
                            VerticalAlignment="Top"
                            materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource Underline}"
                            Background="Transparent"
                            BorderBrush="{x:Null}"
                            CaretBrush="{DynamicResource CommonText}"
                            SelectionBrush="{DynamicResource CommonText}"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                            Text="{Binding PasswordReset}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding CheckFormatPassowrdNewCommand}" CommandParameter="{Binding ElementName=PasswordNew}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>

                    </Border>

                    <Label
                        Margin="26,200,441,149"
                        Content="Password &#xD;&#xA;confirm"
                        FontSize="16"
                        Foreground="{DynamicResource CommonText}"
                        RenderTransformOrigin="0.482,1.273" />

                    <Border
                        Width="400"
                        Height="40"
                        Margin="124,205,36,155"
                        Background="{DynamicResource Login_border}"
                        CornerRadius="15">
                        <PasswordBox
                            x:Name="PasswordResetConfirm"
                            Width="380"
                            Height="40"
                            materialDesign:PasswordBoxAssist.Password="{Binding Password2, Mode=TwoWay}"
                            materialDesign:TextFieldAssist.HasClearButton="True"
                            materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource Underline}"
                            BorderBrush="{x:Null}"
                            CaretBrush="{DynamicResource CommonText}"
                            IsEnabled="{Binding ElementName=RevealPasswordFloatingEnabled, Path=IsChecked}"
                            SelectionBrush="{DynamicResource CommonText}"
                            Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="PasswordChanged">
                                    <i:InvokeCommandAction Command="{Binding PasswordResetConfirmChangedCommand}" CommandParameter="{Binding ElementName=PasswordResetConfirm}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding CheckMathConfirmPasswordNewCommand}" CommandParameter="{Binding ElementName=PasswordResetConfirm}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </PasswordBox>
                    </Border>
                    <!--  Password not match. Try again!  -->
                    <StackPanel Visibility="{Binding IncorrectPasswordReset, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Grid Width="362" Margin="130,168,140,50">
                            <materialDesign:PackIcon
                                VerticalAlignment="Center"
                                Foreground="Red"
                                Kind="CloseCircle" />
                            <TextBlock
                                Margin="15,-1,5,1"
                                FontSize="12"
                                Foreground="Red"
                                Text=" Password must be 6-16 characters long!"
                                TextWrapping="Wrap" />
                        </Grid>
                    </StackPanel>
                    <StackPanel Visibility="{Binding IncorrectConfirmReset, Converter={StaticResource BoolToVisibilityConverter}}">
                        <WrapPanel Margin="130,250,150,50">
                            <materialDesign:PackIcon
                                VerticalAlignment="Center"
                                Foreground="Red"
                                Kind="CloseCircle" />
                            <TextBlock
                                FontSize="12"
                                Foreground="Red"
                                Text=" Password not match. Try again!" />
                        </WrapPanel>
                    </StackPanel>

                    <Button x:Name="ConfirmResetGmail"
                            Margin="300,300,50,45"
                            Content="Confirm"
                            FontSize="18"
                            Foreground="{DynamicResource Login_buttonText}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding NavigationConfirmNewPassword}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background"
                                        Value="{DynamicResource Confirm_button}" />
                                <Setter Property="Foreground"
                                        Value="#E5CBBFBF" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver"
                                             Value="true">
                                        <Setter Property="Cursor"
                                                Value="Hand" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource Confirm_buttonHover}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        CornerRadius="30">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Button Margin="50,300,300,44"
                            Content="Cancel"
                            FontSize="18"
                            Foreground="{DynamicResource Login_buttonText}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding CancelEmailCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background"
                                        Value="{DynamicResource Cancel_button}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource CommonText}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver"
                                             Value="true">
                                        <Setter Property="Cursor"
                                                Value="Hand" />
                                        <Setter Property="Background"
                                                Value="{DynamicResource Cancel_buttonHover}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.Template>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        CornerRadius="30">
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </Grid>
            </Grid>
        </materialDesign:Card>
    </Grid>
</UserControl>