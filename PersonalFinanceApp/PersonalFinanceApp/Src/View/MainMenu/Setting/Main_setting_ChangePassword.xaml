<UserControl
    x:Class="PersonalFinanceApp.Src.View.Main_setting_ChangePassword"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:PersonalFinanceApp.Src.View"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </UserControl.Resources>
    <Border
        Width="560"
        Height="400"
        Background="{DynamicResource CommonGridBackground}"
        CornerRadius="30">

        <Grid>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontFamily" Value="Sans Serif Collection" />
                    <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                    <Setter Property="FontWeight" Value="Regular" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="{DynamicResource Login_button}" />
                    <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="{DynamicResource onHovered}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="7*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="8*" />
                <RowDefinition Height="9*" />
            </Grid.RowDefinitions>

            <TextBlock
                Grid.Row="0"
                Width="auto"
                Height="auto"
                HorizontalAlignment="Center"
                FontFamily="Sans Serif Collection"
                FontSize="30"
                Foreground="{DynamicResource SuperText}"
                Text="Change your password" />
            <Grid Grid.Row="1">
                <TextBlock
                    Width="81"
                    Margin="30,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Foreground="{DynamicResource CommonText}"
                    LineHeight="20"
                    LineStackingStrategy="BlockLineHeight"
                    Text="Current&#x0A;password" />
                <Border
                    Width="400"
                    Height="40"
                    Margin="90,0,0,10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{DynamicResource Login_border}"
                    CornerRadius="15">
                    <TextBox
                        Width="380"
                        Height="40"
                        VerticalAlignment="Top"
                        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource Underline}"
                        Background="Transparent"
                        BorderBrush="{x:Null}"
                        CaretBrush="{DynamicResource CommonText}"
                        Foreground="{DynamicResource CommonText}"
                        SelectionBrush="{DynamicResource CommonText}"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        Text="{Binding PasswordCurrent}" />
                </Border>
                <!--  Invalid password  -->
                <Grid
                    Height="25"
                    Margin="130,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding CurrentPwr, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon
                        VerticalAlignment="Bottom"
                        Foreground="Red"
                        Kind="CloseCircle" />
                    <TextBlock
                        Margin="20,1,0,-1"
                        FontSize="12"
                        Foreground="Red"
                        Text="Invalid password"
                        TextWrapping="Wrap" />
                </Grid>
            </Grid>

            <Grid Grid.Row="2">
                <TextBlock
                    Width="81"
                    Margin="30,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Foreground="{DynamicResource CommonText}"
                    LineHeight="20"
                    LineStackingStrategy="BlockLineHeight"
                    Text="New&#x0A;password" />
                <Border
                    Width="400"
                    Height="40"
                    Margin="90,0,0,10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{DynamicResource Login_border}"
                    CornerRadius="15">
                    <PasswordBox
                        x:Name="PasswordNew"
                        Width="380"
                        Height="40"
                        materialDesign:PasswordBoxAssist.Password="{Binding Password2, Mode=TwoWay}"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource Underline}"
                        BorderBrush="{x:Null}"
                        CaretBrush="{DynamicResource CommonText}"
                        Foreground="{DynamicResource CommonText}"
                        IsEnabled="{Binding ElementName=RevealPasswordFloatingEnabled, Path=IsChecked}"
                        SelectionBrush="{DynamicResource CommonText}"
                        Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PasswordChanged">
                                <i:InvokeCommandAction Command="{Binding PasswordNewCommand}" CommandParameter="{Binding ElementName=PasswordNew}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </PasswordBox>
                </Border>

                <!--  Invalid email  -->
                <Grid
                    Height="25"
                    Margin="130,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding NewPwr, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon
                        VerticalAlignment="Bottom"
                        Foreground="Red"
                        Kind="CloseCircle" />
                    <TextBlock
                        Margin="20,1,0,-1"
                        FontSize="12"
                        Foreground="Red"
                        Text="Password must be 6-16 characters long!"
                        TextWrapping="Wrap" />
                </Grid>
            </Grid>
            <Grid Grid.Row="3">
                <TextBlock
                    Width="81"
                    Margin="30,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    FontSize="14"
                    Foreground="{DynamicResource CommonText}"
                    LineHeight="20"
                    LineStackingStrategy="BlockLineHeight"
                    Text="Cofirm&#x0A;password" />
                <Border
                    Width="400"
                    Height="40"
                    Margin="90,0,0,10"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Background="{DynamicResource Login_border}"
                    CornerRadius="15">
                    <PasswordBox
                        x:Name="PasswordConfirm"
                        Width="380"
                        Height="40"
                        materialDesign:PasswordBoxAssist.Password="{Binding Password2, Mode=TwoWay}"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource Underline}"
                        BorderBrush="{x:Null}"
                        CaretBrush="{DynamicResource CommonText}"
                        Foreground="{DynamicResource CommonText}"
                        IsEnabled="{Binding ElementName=RevealPasswordFloatingEnabled, Path=IsChecked}"
                        SelectionBrush="{DynamicResource CommonText}"
                        Style="{StaticResource MaterialDesignFloatingHintRevealPasswordBox}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PasswordChanged">
                                <i:InvokeCommandAction Command="{Binding ConfirmPasswordCommand}" CommandParameter="{Binding ElementName=PasswordConfirm}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </PasswordBox>
                </Border>

                <!--  Invalid email  -->
                <Grid
                    Height="25"
                    Margin="130,0,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom"
                    Visibility="{Binding ConfirmPwr, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon
                        VerticalAlignment="Bottom"
                        Foreground="Red"
                        Kind="CloseCircle" />
                    <TextBlock
                        Margin="20,1,0,-1"
                        FontSize="12"
                        Foreground="Red"
                        Text="Password do not match"
                        TextWrapping="Wrap" />
                </Grid>
            </Grid>
            <Grid Grid.Row="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Column="0"
                    Width="210"
                    Height="55"
                    Command="{Binding CancelChangedPasswordCommand}"
                    Content="Cancel"
                    FontSize="18"
                    Foreground="{DynamicResource Login_buttonText}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{DynamicResource Cancel_button}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="Background" Value="{DynamicResource Cancel_buttonHover}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="30">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Button
                    Grid.Column="1"
                    Width="210"
                    Height="55"
                    Command="{Binding ChangedPasswordCommand}"
                    Content="Confirm"
                    FontSize="18"
                    Foreground="{DynamicResource Login_buttonText}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Background" Value="{DynamicResource Confirm_button}" />
                            <Setter Property="Foreground" Value="#E5CBBFBF" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="Background" Value="{DynamicResource Confirm_buttonHover}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="Transparent"
                                BorderThickness="1"
                                CornerRadius="30">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>


            </Grid>
        </Grid>
    </Border>
</UserControl>
