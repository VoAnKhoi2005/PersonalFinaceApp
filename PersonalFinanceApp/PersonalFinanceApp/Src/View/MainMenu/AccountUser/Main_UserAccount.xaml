<UserControl
    x:Class="PersonalFinanceApp.Src.View.UC_Main_UserAccountView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:PersonalFinanceApp.Src.View"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <!--  color done  -->
    <Border
        Width="300"
        Height="300"
        Background="{DynamicResource User_background}"
        CornerRadius="30">
        <Grid>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontFamily" Value="Sans Serif Collection" />
                    <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                    <Setter Property="FontWeight" Value="Regular" />
                    <Setter Property="FontSize" Value="16" />
                </Style>
                <Style TargetType="materialDesign:PackIcon">
                    <Setter Property="Foreground" Value="{DynamicResource CommonText}" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                            <Setter Property="Background" Value="{DynamicResource User_onHovered}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="16*" />
                <RowDefinition Height="19*" />
            </Grid.RowDefinitions>
            <!--  avatar  -->
            <Border
                Width="150"
                Height="150"
                Margin="0,10,0,0"
                CornerRadius="90" />
            <TextBlock
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Text="User avatar here" />

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="5*" />
                    <RowDefinition Height="5*" />
                </Grid.RowDefinitions>

                <!--  user name  -->
                <TextBlock HorizontalAlignment="Center"
                           VerticalAlignment="Bottom"
                           FontSize="16"
                           FontWeight="Bold"
                           Text="@username" />

                <!--  sign out  -->
                <Border Grid.Row="1">
                    <Button>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*" />
                                <ColumnDefinition Width="23*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Grid.Column="1"
                                Margin="15,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Text="Sign out" />
                            <materialDesign:PackIcon
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="AccountLockOpen" />
                        </Grid>
                    </Button>
                </Border>
                <!--  exit program  -->
                <Border Grid.Row="3">
                    <Button>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*" />
                                <ColumnDefinition Width="23*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock
                                Grid.Column="1"
                                Margin="15,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Text="Exit" />
                            <materialDesign:PackIcon
                                Width="30"
                                Height="30"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Kind="Logout" />
                        </Grid>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="0,0,30,30">
                                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Cursor" Value="Hand" />
                                        <Setter Property="Background" Value="{DynamicResource User_onHovered}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
            </Grid>
        </Grid>
    </Border>
</UserControl>
