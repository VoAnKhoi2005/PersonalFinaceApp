<UserControl x:Class="PersonalFinanceApp.Src.View.UC_Main_UserAccountView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PersonalFinanceApp.Src.View"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <!--color done-->
    <Border Width="300" 
            Height="350"  
            Background="{DynamicResource User_background}" 
            CornerRadius="30">
        <Grid>
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="FontFamily" Value="Sans Serif Collection"/>
                    <Setter Property="Foreground" Value="{DynamicResource CommonText}"/>
                    <Setter Property="FontWeight" Value="Regular"/>
                    <Setter Property="FontSize" Value="16"></Setter>
                </Style>
                <Style TargetType="materialDesign:PackIcon">
                    <Setter Property="Foreground" Value="{DynamicResource CommonText}"/>
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="BorderThickness" Value="0"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Stretch"></ContentPresenter>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                            <Setter Property="Background" Value="{DynamicResource User_onHovered}"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="16*"></RowDefinition>
                <RowDefinition Height="19*"></RowDefinition>
            </Grid.RowDefinitions>
            <!--avatar-->
            <Border Width="150" Height="150"
                    Margin="0,10,0,0" CornerRadius="90" 
                    />
            <TextBlock Text="User avatar here" VerticalAlignment="Center"
                       HorizontalAlignment="Center"  ></TextBlock>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*"></RowDefinition>
                    <RowDefinition Height="5*"></RowDefinition>
                    <RowDefinition Height="5*"></RowDefinition>
                    <RowDefinition Height="5*"></RowDefinition>
                </Grid.RowDefinitions>

                <!--user name-->
                <TextBlock Text="@username" VerticalAlignment="Bottom"
                           HorizontalAlignment="Center"
                           FontSize="16" FontWeight="Bold"></TextBlock>

                <!--account detail-->
                <Border Grid.Row="1">
                    <Button>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*"></ColumnDefinition>
                                <ColumnDefinition Width="23*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Account detail" Grid.Column="1"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="15,0,0,0"
                               ></TextBlock>
                            <materialDesign:PackIcon Kind="AccountCog" 
                                                 Width="30" 
                                                 Height="30" 
                                                 VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"></materialDesign:PackIcon>
                        </Grid>
                    </Button>
                </Border>

                <!--sign out-->
                <Border Grid.Row="2">
                    <Button>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*"></ColumnDefinition>
                                <ColumnDefinition Width="23*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Sign out" Grid.Column="1"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="15,0,0,0"
                               ></TextBlock>
                            <materialDesign:PackIcon Kind="AccountLockOpen" 
                                                 Width="30" 
                                                 Height="30" 
                                                 VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"></materialDesign:PackIcon>
                        </Grid>
                    </Button>
                </Border>
                <!--exit program-->
                <Border Grid.Row="3">
                    <Button>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*"></ColumnDefinition>
                                <ColumnDefinition Width="23*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Exit" Grid.Column="1"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"
                                       Margin="15,0,0,0"
                               ></TextBlock>
                            <materialDesign:PackIcon Kind="Logout" 
                                                 Width="30" 
                                                 Height="30" 
                                                 VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"></materialDesign:PackIcon>
                        </Grid>
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Transparent"></Setter>
                                <Setter Property="BorderThickness" Value="0"></Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="0,0,30,30">
                                                <ContentPresenter HorizontalAlignment="Stretch"
                                                              VerticalAlignment="Stretch"></ContentPresenter>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Cursor" Value="Hand"></Setter>
                                        <Setter Property="Background" Value="{DynamicResource User_onHovered}"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Border>
            </Grid>
        </Grid>
    </Border>
</UserControl>
